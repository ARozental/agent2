Datasets:
1. load data set from file: ["I like big butts. I can not lie.", "some other song"]
2. set max level option when loading the dataset - example:
    2 => ["I like big butts. I can not lie.", "some other song"]
    1 => ["I like big butts.", "I can not lie.", "some other song"]
    0 => ["I", "like", "big", "butts.", "I", "can", "not", "lie.", "some", "other", song"]
3. make a medium dataset from ../datasets/no_titles
4. make wiki dataset?
5. find out who to get a real dataset (all of Kindle with style and star rating)

Transformer Model:
1. use SwiGLU activation function: https://arxiv.org/pdf/2102.11972.pdf
2. have a universal transformer => a lot later, as it is ~6X slower than the regular one for the same number of params

Training:
1. create batches of controllable (set from config) memory footprint from all Tree nodes for each level:
2. have a loss object multiplier and (maybe) an apply loss function like in the TF code => after medium dataset
3. find a set of sane hyper parameters

Refactoring:
4. make code faster, avoid everyplace that exits the GPU
5. use the same name for hidden_size/vector_size/embed_size
6. refactor full_decode to be: full_decode(self,node) and merge with deep_detokenize; so it becomess Node to text function


CURRENT TASKS:
Datasets 1,2
Transformer 1
Tests 1
AgentModel 1
Refactoring 5,6

AgentModel:
1. refactor actual decode function
2. write the cnn-discriminator
3. write (and design?) the PNDB => after medium dataset
4. write lossless compression+decompression => after medium dataset
5. write style GAN => Harry Potter and the Starship Enterprise


Tests:
1. tensor board
